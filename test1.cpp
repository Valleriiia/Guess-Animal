#include <iostream>
#include <string>
#include <unordered_map>
#include <unordered_set>
#include <vector>
#include <cstdlib>
#include <ctime>
#include <algorithm>

using namespace std;

class AnimalGame {
private:
    unordered_map<string, unordered_set<string>> animals;
    unordered_map<string, unordered_set<string>> keywords;

public:
    AnimalGame() {
        initAnimals();
        initKeywords();
    }

    void play() {
        srand(time(nullptr));
        auto iter = animals.begin();
        advance(iter, rand() % animals.size());
        const string& animal = iter->first;

        cout << "Комп'ютер загадав тварину. Спробуйте вгадати, яку тварину загадав комп'ютер." << endl;

        string input;
        while (true) {
            cout << "\nЩо ви хочете зробити? (1 - задати запитання, 2 - зробити припущення): ";
            getline(cin, input);

            if (input == "1") {
                askQuestion(animal);
            } else if (input == "2") {
                makeGuess(animal);
            } else {
                cout << "Невірний вибір. Введіть 1 для задавання запитання або 2 для припущення." << endl;
            }
        }
    }

private:
    void initAnimals() {
        animals = {
            {"Тигр", {"хижак", "смугастий", "велика", "гострі зуби", "кігті", "швидка", "ссавець"}},
            {"Лев", {"хижак", "грива", "велика", "кігті", "гострі зуби", "швидка", "стадна"}},
            {"Лисиця", {"хижак", "хитра", "рижа", "невелика", "швидка", "ссавець", "розумний", "гострі зуби"}},
            {"Корова", {"травоїдна", "домашня", "має роги", "молоко", "велика", "ссавець", "пасеться", "довгі роги"}},
            {"Жираф", {"травоїдна", "довга шия", "високий", "плямиста шкіра", "довгі ноги", "має роги"}},
            {"Верблюд", {"ссавець", "травоїдний", "великий", "довга шия", "горби", "пустельний"}},
            {"Краб", {"водний", "ракоподібний", "панцир", "хижак", "клешні", "морський"}},
            {"Каракатиця", {"хижак", "водний", "щупальця", "м'яке тіло", "випускає чорнило", "змінює колір"}},
            {"Кальмар", {"хижак", "водний", "швидкий", "м'яке тіло", "щупальця", "випускає чорнило", "безхребетний", "велика", "змінює колір"}},
            {"Орел", {"хижак", "літає", "гострий зір", "велика", "кігті", "швидка", "перната"}},
            {"Ластівка", {"всеїдна", "літає", "швидка", "невелика", "перната", "гніздиться", "мігрує"}},
            {"Папуга", {"травоїдна", "літає", "яскраве пір'я", "розмовляє", "невелика", "перната", "розумний"}},
            {"Кіт", {"ссавець", "домашня", "вуса", "нічний зір", "м'яке хутро", "кігті", "соціальна", "нявкає"}},
            {"Собака", {"домашня", "нюх", "гавкає", "вірна", "соціальна", "ссавець", "м'яке хутро"}},
            {"Кролик", {"травоїдна", "домашня", "довгі вуха", "швидка", "моркву", "м'яке хутро", "стрибає"}}
        };
    }

    void initKeywords() {
        keywords = {
            {"хижак", {"хижак", "Хижак", "хижий", "Хижий", "хижа", "Хижа"}},
            {"травоїдна", {"травоїдна", "Травоїдна", "травоїдний", "Травоїдний"}},
            {"всеїдна", {"всеїдна", "Всеїдна", "всеїдний", "Всеїдний"}},
            {"літає", {"літає", "Літає", "літаючий", "Літаючий", "літаюча", "Літаюча", "вміє літати", "Вміє літати", "може літати", "Може літати"}}, 
            {"водний", {"водний", "Водний",  "водна", "Водна", "живе у воді", "Живе у воді" }},
            {"домашня", {"домашня", "Домашня", "домашній", "Домашній", "свійська", "Свійська"}},
            {"смугастий", {"смугастий", "Смугастий", "смугаста", "Смугаста",  "зі смугами", "Зі смугами", "в смужках", "В смужках"}},
            {"велика", {"велика", "Велика", "великий", "Великий"}},
            {"гострі зуби", {"гострі зуби", "Гострі зуби", "гострі ікла", "Гострі ікла"}},
            {"кігті", {"кігті", "Кігті","кігтями", "Кігтями"}},
            {"швидка", {"швидка", "Швидка", "швидкий", "Швидкий", "швидко", "Швидко"}},
            {"ссавець", {"ссавець", "Ссавець", "ссавці", "Ссавці"}},
            {"грива", {"грива", "Грива", "гриву", "Гриву", "гриви", "Гриви", "з гривою", "З гривою"}},
            {"стадна", {"стадна", "Стадна", "стадний", "Стадний", "в стаді", "В стаді", "стадом", "Стадом"}},
            {"хитра", {"хитра", "Хитра", "хитрий", "Хитрий"}},
            {"рижа", {"рижа", "Рижа", "рижий", "Рижий", "рудий", "Рудий", "руда", "Руда"}},
            {"невелика", {"невелика", "Невелика", "невеликий", "Невеликий", "маленька", "Маленька", "малий", "Малий"}},
            {"розумний", {"розумний", "Розумний", "розумна", "Розумна"}},
            {"має роги", {"має роги", "Має роги", "з рогами", "З рогами", "рогатий", "Рогатий", "рогата", "Рогата"}},
            {"молоко", {"молоко", "Молоко"}},
            {"пасеться", {"пасеться", "Пасеться", "пасти", "Пасти"}},
            {"довга шия", {"довга шия", "Довга шия", "довгу шию", "Довгу шию"}},
            {"високий", {"високий", "Високий", "висока", "Висока"}},
            {"плямиста шкіра", {"плямиста шкіра", "Плямиста шкіра", "плямистий", "Плямистий", "плямиста", "Плямиста"}},
            {"довгі ноги", {"довгі ноги", "Довгі ноги", "довгонога", "Довгонога"}},
            {"пустельний", {"пустельний", "Пустельний", "пустельна", "Пустельна", "живе в пустелі", "Живе в пустелі"}},
            {"ракоподібний", {"ракоподібний", "Ракоподібний", "ракоподібна", "Ракоподібна"}},
            {"панцир", {"панцир", "Панцир", "панцирний", "Панцирний", "панцирна", "Панцирна"}},
            {"клешні", {"клешні", "Клешні", "клешня", "Клешня", "клешню", "Клешню"}},
            {"щупальця", {"щупальця", "Щупальця", "щупалець", "Щупалець", "щупальці", "Щупальці"}},
            {"м'яке тіло", {"м'яке тіло", "М'яке тіло"}},
            {"випускає чорнило", {"випускає чорнило", "Випускає чорнило", "чорнило", "Чорнило"}},
            {"змінює колір", {"змінює колір", "Змінює колір", "змінювати колір", "Змінювати колір", "колір"}},
            {"безхребетний", {"безхребетний", "Безхребетний", "безхребетна", "Безхребетна"}},
            {"гострий зір", {"гострий зір", "Гострий зір", "зір"}},
            {"перната", {"перната", "Перната", "пернатий", "Пернатий", "з пір'ям", "З пір'ям"}},
            {"гніздиться", {"гніздиться", "Гніздиться", "гніздиться в", "Гніздиться в", "гніздо", "Гніздо"}},
            {"мігрує", {"мігрує", "Мігрує", "мігрують", "Мігрують", "мігруючий", "Мігруючий"}},
            {"яскраве пір'я", {"яскраве пір'я", "Яскраве пір'я"}},
            {"розмовляє", {"розмовляє", "Розмовляє", "говорить", "Говорить", "розмовляти", "Розмовляти"}},
            {"вуса", {"вуса", "Вуса", "вусики", "Вусики", "з вусами", "З вусами"}},
            {"нічний зір", {"нічний зір", "Нічний зір", "бачить вночі", "Бачить вночі"}},
            {"м'яке хутро", {"м'яке хутро", "М'яке хутро"}},
            {"соціальна", {"соціальна", "Соціальна", "соціальний", "Соціальний"}},
            {"нявкає", {"нявкає", "Нявкає", "мяукає", "Мяукає", "мяу", "Мяу"}},
            {"нюх", {"нюх", "Нюх", "запах", "Запах", "чутливий до запахів", "Чутливий до запахів"}},
            {"гавкає", {"гавкає", "Гавкає", "гав", "Гав", "гавкати", "Гавкати"}},
            {"вірна", {"вірна", "Вірна", "вірний", "Вірний"}},
            {"моркву", {"моркву", "Моркву", "морква", "Морква"}},
            {"довгі вуха", {"довгі вуха", "Довгі вуха", "вуха"}},
            {"стрибає", {"стрибає", "Стрибає", "стрибати", "Стрибати"}}
        };
    }

   class QuestionAsker {
   public:
    void ask(const string& animal, const unordered_map<string, unordered_set<string>>& animals, const unordered_map<string, unordered_set<string>>& keywords) {
        string question;
        cout << "\nЗадайте своє запитання: ";
        getline(cin, question);

        bool found = false;
        for (const auto& [key, variations] : keywords) {
            for (const auto& variation : variations) {
                if (question.find(variation) != string::npos) {
                    found = true;
                    if (animals.at(animal).count(key) > 0) {
                        cout << "\nТак." << endl;
                    } else {
                        cout << "\nНі." << endl;
                    }
                    break;
                }
            }
            if (found) break;
        }

        if (!found) {
            cout << "\nНезрозуміле запитання. Спробуйте знову." << endl;
        }
    }
};

   class Guesser {
   public:
    void guess(const string& animal) {
        cout << "\nВаше припущення: ";
        string guess;
        getline(cin, guess);

        transform(guess.begin(), guess.end(), guess.begin(), ::tolower);
        string animalLower = animal;
        transform(animalLower.begin(), animalLower.end(), animalLower.begin(), ::tolower);

        if (guess == animalLower) {
            cout << "\nВітаю! Ви вгадали тварину: " << animal << "!" << endl;
        } else {
            cout << "\nНеправильно. Комп'ютер загадав тварину: " << animal << "." << endl;
        }
    }
};

int main() {
    AnimalGame game;
    game.play();

    return 0;
}
